# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: ["develop"]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: ["develop"]
    paths-ignore:
      - "**.md"

jobs:
  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.3
          cache: true

      - name: Run flutter version
        run: flutter --version

      - name: Get packages
        run: flutter pub get

      - name: Install matcher
        run: echo "::add-matcher::.github/analyzer-problem-matcher.json"

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Run flutter analyze
        shell: bash
        run: |
          flutter analyze --fatal-infos | tee ./flutter_analyze_report.txt

      - name: Remove matcher
        if: always()
        run: echo "::remove-matcher owner=dart-analyzer::"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        if: always()
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Danger
        uses: MeilCli/danger-action@1996610a4c089e3a79bf3131a70c3c1b311e32f9
        if: always()
        with:
          plugins_file: "Gemfile"
          danger_file: "Dangerfile"
          danger_id: "danger-pr"
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Formatter
        run: dart format $(find lib -name "*.dart" -not \( -name "*.*freezed.dart" -o -name "*.*g.dart" \) ) --set-exit-if-changed
